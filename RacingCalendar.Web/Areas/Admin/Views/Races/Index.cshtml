@model RacingCalendar.ViewModels.PaginatedList<RacingCalendar.ViewModels.RaceViewModel>
@{
    ViewData["Title"] = "Races";
    Layout = "/Views/Shared/_Layout.cshtml";
    var selectedValue = ViewBag.SeriesId?.ToString() ?? "";
}

<link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />

<div class="racing-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="racing-header">
            <i class="fas fa-flag-checkered me-2"></i>All Races
        </h2>
        <a asp-action="Create" class="btn btn-racing-primary">
            <i class="fas fa-plus me-1"></i> Add New Race
        </a>
    </div>

    <form asp-action="Index" method="get" class="mb-3 row g-2 align-items-center">
        <div class="col-md-6">
            <input type="text" name="searchTerm" value="@Context.Request.Query["searchTerm"]" class="form-control" placeholder="Search races by name, series, or circuit..." />
        </div>
        <div class="col-md-4">
            <select name="seriesId" class="form-select" onchange="this.form.submit()">
                <option value="">All Series</option>
                    @foreach (var series in ViewBag.SeriesOptions as IEnumerable<SelectListItem>)
                    {
                        <option value="@series.Value" selected="@(series.Value == selectedValue ? "selected" : null)">
                            @series.Text
                        </option>
                    }
            </select>
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-outline-secondary w-100">
                <i class="fas fa-search"></i> Search
            </button>
        </div>
    </form>

    <div class="racing-table-container">
        <table class="racing-table">
            <thead>
                <tr>
                    <th>Race Name</th>
                    <th>Date</th>
                    <th>Series</th>
                    <th>Circuit</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var race in Model.Items)
                {
                    <tr>
                        <td class="fw-semibold">
                            <i class="fas fa-flag me-2 text-danger"></i>@race.Name
                        </td>
                        <td>
                            <span class="racing-date-badge">
                                @race.Date.ToString("MMM dd, yyyy")
                            </span>
                        </td>
                        <td>@race.SeriesName</td>
                        <td>@race.CircuitName</td>
                        <td class="text-end">
                            <div class="d-flex gap-2 justify-content-end">
                                <a asp-action="Edit" asp-route-id="@race.Id" class="btn btn-racing-warning btn-sm">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <form asp-action="Delete" asp-route-id="@race.Id" method="post"
                                      onsubmit="return confirm('Delete @race.Name on @race.Date.ToString("MMM dd")?');">
                                    <button type="submit" class="btn btn-racing-danger btn-sm">
                                        <i class="fas fa-trash-alt"></i> Delete
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation" class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.PageIndex - 1)"
                       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                       asp-route-seriesId="@ViewBag.SeriesId">Previous</a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><span class="page-link">Previous</span></li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active"><span class="page-link">@i</span></li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@i"
                           asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                           asp-route-seriesId="@ViewBag.SeriesId">@i</a>
                    </li>
                }
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Index"
                       asp-route-page="@(Model.PageIndex + 1)"
                       asp-route-searchTerm="@Context.Request.Query["searchTerm"]"
                       asp-route-seriesId="@ViewBag.SeriesId">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled"><span class="page-link">Next</span></li>
            }
        </ul>
    </nav>
</div>
